<?xml version="1.0"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.as.quickstarts</groupId>
	<artifactId>jboss-as-hibernate-search</artifactId>
	<version>7.1.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>JBoss AS Quickstarts: hibernate-search</name>
	<description>hibernate-search: Demonstrates doing a full text search of your entities</description>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->

		<version.jboss.maven.plugin>7.3.Final</version.jboss.maven.plugin>

		<version.jboss.spec.javaee.6.0>3.0.2.Final</version.jboss.spec.javaee.6.0>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 3.0.2.Final-redhat-3 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-3</version.jboss.spec.javaee.6.0> -->

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>1.0.6.Final</version.jboss.bom>

		<!-- other plugin versions -->
		<version.compiler.plugin>2.3.1</version.compiler.plugin>
		<version.resources.plugin>2.6</version.resources.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
				dependencies from org.jboss.spec will have their version defined by this 
				BOM -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss AS that implements Java EE 6, not just JBoss AS 7! -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>${version.jboss.spec.javaee.6.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-hibernate stack (you 
				can read this as the JBoss stack of the Java EE Web Profile 6 APIs with extras 
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<!--<dependency> <groupId>org.jboss.spec.javax.faces</groupId> <artifactId>jboss-jsf-api_2.1_spec</artifactId> 
			<scope>provided</scope> </dependency> -->

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<!--<scope>provided</scope> -->
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.1_spec</artifactId>
			<!--<scope>provided</scope> -->
		</dependency>

		<!-- Import the SERVLET API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<!--<dependency> <groupId>org.jboss.spec.javax.ejb</groupId> <artifactId>jboss-ejb-api_3.1_spec</artifactId> 
			<scope>provided</scope> </dependency> -->

		<!--Import dependencies to hibernate packages(eg. hibernate-core) depending 
			on features you want to use like Hibernate Session used in the quickstart -->
		<!--please note that scope is provided as these jars are shipped with as7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<!--<scope>provided</scope> -->
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search</artifactId>
			<!--<scope>provided</scope> -->
		</dependency>

		<!--<dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-annotations</artifactId> 
			&lt;!&ndash;<version>${hibernate-core-version}</version>&ndash;&gt; </dependency> -->

		<!-- Import the RESTEASY API, we don't use provided scope as the I am not 
			sure this API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>
		<!-- JAXB support -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>
		<!-- multipart/form-data and multipart/mixed support -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>2.3.1.GA</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>net.java.dev.rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>

		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>

		<!-- Additional Analyzers: -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-analyzers</artifactId>
			<version>4.1.1.Final</version>
		</dependency>
		<!-- Infinispan integration: -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-infinispan</artifactId>
			<version>4.1.1.Final</version>
		</dependency>


		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-lucene-directory</artifactId>
			<version>5.3.0.Beta1</version>
		</dependency>

	</dependencies>



	<build>

		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>

			<!-- <plugin> <artifactId>maven-resources-plugin</artifactId> <version>${version.resources.plugin}</version> 
				<executions> <execution> <id>copy-resources</id> here the phase you need 
				<phase>package</phase> <goals> <goal>copy-resources</goal> </goals> <configuration> 
				<outputDirectory>${basedir}/target/jboss-as-hibernate-search/WEB-INF/classes</outputDirectory> 
				<resources> <resource> <directory>src/main/resources</directory> <filtering>true</filtering> 
				</resource> </resources> </configuration> </execution> </executions> </plugin> -->


			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- <webResources> <resource> <directory>src/main/resources</directory> 
						<filtering>true</filtering> </resource> </webResources> -->
				</configuration>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss.maven.plugin}</version>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>


		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>


	<profiles>
		<profile>
			<id>default1</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- <connection.url>jdbc:mysql://127.0.0.1:3306/qsdb</connection.url> 
					<connection.driver_class>com.mysql.jdbc.Driver</connection.driver_class> 
					<connection.username>root</connection.username> <connection.password>root123</connection.password> 
					<connection.dialect>org.hibernate.dialect.MySQLDialect</connection.dialect> -->

				<connection.url>jdbc:postgresql://localhost/jbossashibernatesearch</connection.url>
				<connection.driver_class>org.postgresql.Driver</connection.driver_class>
				<connection.username>tharindudb</connection.username>
				<connection.password>postgres</connection.password>
				<connection.dialect>org.hibernate.dialect.PostgreSQLDialect</connection.dialect>
			</properties>
		</profile>
		<profile>
			<id>openshift</id>
			<properties>
				<connection.url>jdbc:mysql://127.2.16.2:3306/jbossashibernatesearch</connection.url>
				<connection.driver_class>com.mysql.jdbc.Driver</connection.driver_class>
				<connection.username>adminTbacVWR</connection.username>
				<connection.password>AmZU9nwk8FMa</connection.password>
				<connection.dialect>org.hibernate.dialect.MySQLDialect</connection.dialect>

				
				<!-- <connection.url>jdbc:postgresql://jbossashibernatesearch-tharinduj.rhcloud.com:5432/jbossashibernatesearch</connection.url>
				<connection.driver_class>org.postgresql.Driver</connection.driver_class>
				<connection.username>adminTbacVWR</connection.username>
				<connection.postgres>AmZU9nwk8FMa</connection.postgres>
				<connection.dialect>org.hibernate.dialect.PostgreSQLDialect</connection.dialect> -->
			</properties>
			<!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${version.war.plugin}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
		</profile>
	</profiles>



</project>

